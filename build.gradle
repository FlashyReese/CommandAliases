plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = "${project.archives_base_name}-mc${project.minecraft_version}"
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "Lucko"
		url 'https://oss.sonatype.org/content/repositories/snapshots'
	}
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Permissions API
	include(modImplementation("me.lucko:fabric-permissions-api:0.1-SNAPSHOT"))

	include(implementation("org.rocksdb:rocksdbjni:7.2.2"))

	implementation(include("org.iq80.leveldb:leveldb:0.12"))
	implementation(include("org.iq80.leveldb:leveldb-api:0.12"))

	modRuntimeOnly "maven.modrinth:lazydfu:0.1.3"
	//modRuntimeOnly "maven.modrinth:sodium:mc1.19-0.4.2"
	modRuntimeOnly "maven.modrinth:lithium:mc1.19-0.8.0"
	modRuntimeOnly "maven.modrinth:phosphor:mc1.19.x-0.8.1"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE.txt"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		maven {
			name = "FlashyReeseReleases"
			url = "https://maven.flashyreese.me/releases"
			credentials {
				username = System.getenv("MAVEN_USERNAME")
				password = System.getenv("MAVEN_PASSWORD")
			}
		}
		maven {
			name = "FlashyReeseSnapshots"
			url = "https://maven.flashyreese.me/snapshots"
			credentials {
				username = System.getenv("MAVEN_USERNAME")
				password = System.getenv("MAVEN_PASSWORD")
			}
		}
	}
}