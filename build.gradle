plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
	id 'io.github.juuxel.loom-quiltflower' version '1.7.2'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+mc${project.minecraft_version}-${getVersionMetadata()}"
group = project.maven_group

repositories {
	maven {
		name = "Lucko"
		url 'https://oss.sonatype.org/content/repositories/snapshots'
	}
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Permissions API
	include(modImplementation("me.lucko:fabric-permissions-api:0.1-SNAPSHOT"))

	// RocksDB
	implementation("org.rocksdb:rocksdbjni:7.2.2") //include()

	// LevelDB
	include(implementation("org.iq80.leveldb:leveldb:0.12"))
	include(implementation("org.iq80.leveldb:leveldb-api:0.12"))

	// Parsing Libraries
	include(implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-toml:2.13.3"))
	include(implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.3"))
	include(implementation("com.fasterxml.jackson.core:jackson-core:2.13.3"))
	include(implementation("com.fasterxml.jackson.core:jackson-databind:2.13.3"))
	include(implementation("com.fasterxml.jackson.core:jackson-annotations:2.13.3"))

	modRuntimeOnly "maven.modrinth:lazydfu:0.1.2"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE.txt")
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		maven {
			name = "FlashyReeseReleases"
			url = "https://maven.flashyreese.me/releases"
			credentials {
				username = System.getenv("MAVEN_USERNAME")
				password = System.getenv("MAVEN_PASSWORD")
			}
		}
		maven {
			name = "FlashyReeseSnapshots"
			url = "https://maven.flashyreese.me/snapshots"
			credentials {
				username = System.getenv("MAVEN_USERNAME")
				password = System.getenv("MAVEN_PASSWORD")
			}
		}
	}
}

static def getVersionMetadata() {
	def build_id = System.getenv("GITHUB_RUN_NUMBER")

	// CI builds only
	if (build_id != null) {
		return "build.${build_id}"
	}

	// No tracking information could be found about the build
	return "unknown"
}